// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

/**
 * @title ISushiTickLens
 * @notice Interface for Sushi's Tick Lens which provides functions for fetching chunks of tick data for a pool
 * @dev This avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and then sending additional multicalls to fetch the tick data
 * @custom:katana 0x35dc3e13469e980c37b6f288bbb9822b1f9bd435
 * @custom:tatara 0xb46e319390de313b8cc95ea5aa30c7bbfd79da94
 * @custom:tags sushi,swap,dex,defi,v3
 */
interface ISushiTickLens {
    function getPopulatedTicksInWord(address pool, int16 tickBitmapIndex)
        external
        view
        returns (ITickLens.PopulatedTick[] memory populatedTicks);
}

interface ITickLens {
    struct PopulatedTick {
        int24 tick;
        int128 liquidityNet;
        uint128 liquidityGross;
    }
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"int16","name":"tickBitmapIndex","type":"int16"}],"name":"getPopulatedTicksInWord","outputs":[{"components":[{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint128","name":"liquidityGross","type":"uint128"}],"internalType":"struct ITickLens.PopulatedTick[]","name":"populatedTicks","type":"tuple[]"}],"stateMutability":"view","type":"function"}]
*/